name: DevSecOps Pipeline CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-analyze:
    name: Build, Scan and Analyze
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código-fonte
      - name: Checkout do código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Configuração do ambiente Java (JDK 21)
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        id: setup-java  # <-- PASSO 1: DÊ UM ID A ESTE PASSO
        with:
          java-version: '21'
          distribution: 'zulu'

      # 3. Configuração do cache do Gradle
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. Dar permissão de execução ao Gradle Wrapper
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew

      # 5. Análise de Dependências (SCA) com Snyk
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/gradle@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          # <-- PASSO 2: FORCE O JAVA_HOME PARA O PASSO DA SNYK
          JAVA_HOME: ${{ steps.setup-java.outputs.jdk-path }}
        with:
          args: --all-sub-projects

      - name: Fix workspace permissions
        run: sudo chown -R $USER:$USER .

      # 6. Build, Testes e Análise de Código Estático (SAST) com SonarQube
      - name: Build and analyze with SonarQube
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew build sonar --info

      # 7. Análise de Segurança Dinâmica (DAST) com OWASP ZAP
      #    Este passo assume que sua aplicação já está em deploy no IP de destino.
      - name: OWASP ZAP Baseline DAST Scan
        uses: zaproxy/action-baseline@v0.11.0 # Versão atualizada da action
        with:
          # O target deve ser o endereço público da sua aplicação em ambiente de teste/staging
          target: 'http://52.233.82.58:8000'